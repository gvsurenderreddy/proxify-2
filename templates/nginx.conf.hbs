#
# {{{name}}}
#
server {

  {{#each listen}}
  listen {{{this}}};
  {{/each}}

  server_name {{{name}}}{{#if subdomain}} {{{subdomain}}}.lan{{/if}};

  {{#if ssl}}
  ssl                 on;
  ssl_stapling        on;
  ssl_stapling_verify on;
  ssl_certificate     {{{output}}}/certs/{{{name}}}.pem;
  ssl_certificate_key {{{output}}}/certs/{{{name}}}.key;
  {{/if}}

  {{#if auth}}
  # Client certificate authentication
  set $authorized_common_name {{{domain}}};
  set $unauthorized_redirect http://error.{{{domain}}}/403.html;

  # Ask for certificate
  ssl_verify_client optional;
  ssl_verify_depth  1;

  # Default to unauthenticated
  set $authenticated FALSE;

  # Ensure common name includes valid option
  set $authentication_check "$ssl_client_s_dn_cn:$authorized_common_name";
  if ($authentication_check ~ "([^:]+):\1") {
    set $authenticated TRUE;
  }

  # Ensure client has certificate
  if ($ssl_client_verify = NONE) {
    set $authenticated FALSE;
  }

  # Redirect trespassers
  if ($authenticated = FALSE) {
    return 303 $unauthorized_redirect;
  }
  {{/if}}

  {{#if redirect}}
  rewrite ^ {{{target}}} permanent;

  {{else}}

  location / {

    {{#if directory}}
    autoindex on;
    alias {{{directory}}};

    {{else}}
    proxy_pass {{{target}}};

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-SSL-Client-Serial $ssl_client_serial;
    proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
    proxy_set_header X-SSL-Client-S-DN $ssl_client_s_dn;
    proxy_set_header X-SSL-Client-S-CN $ssl_client_s_dn_cn;
    {{/if}}

    {{#if pass}}
    auth_basic "Restricted";
    auth_basic_user_file {{{output}}}/nginx/.htpasswd;
    {{/if}}
  }

  {{/if}}
}
